
// Patient Management System
Patient{

    int id;
    String name;
    Designation designation
    Category category
    int contactNumber
    ArrayList<PatientRecord> records

}

PatientRecord {

    int recordId;
    int patientId;
    LocalDateTime date;
    String description;
    String diagnosis;
    ArrayList<Medicine> medicineIssued; 

}

PatientDao {

    // Create
    void add(Patient patient);

    // Read
    ArrayList<Patient> getAll();
    Patient get(int id);

    // Update
    void update(Patient patient);

    // Delete
    void delete(int id);
    
}

PatientService {

    void add(Patient patient)
    ArrayList<Patient> getPatients();
    Patient getPatient(int id);
    void update(Patient patient);
    void delete(int id);

}

PatientRecordDao {

    // Create
    void add(PatientRecord record);

    // Read
    ArrayList<PatientRecord> getAll();
    ArrayList<PatientRecord> gettRecordsByPatientId(int patientId);
    PatientRecord get(int recordId);

    // Update
    void update(PatientRecord record);

    // Delete
    void delete(int id);

}

PatientRecordService {
    void add(PatientRecord record)
    ArrayList<PatientRecord> getRecords()
    ArrayList<PatientRecord> getRecords(DateRange dateRange) // get records within the date range
    ArrayList<PatientRecord> getRecords(LocalDate date) // get records whithin a date
    PatientRecord getRecord(int id) // record id ang gamit
    ArrayList<PatientRecord> gettRecordsByPatientId(int patientId)
    void update(PatientRecord record)
    void delete(int id)
}

PatientManagementSystem{
    // Display all patients pina table form, first column 
    // ang full name, then ang id
    Choose Action:
    [1] Add Patient Record
    [2] View Patient // mangayog input na id or name, ikaw bahala. Diri maview ang records sa patient
    [3] View Student Patients
    [4] View Faculty Patients
}

// [===================================================]

// Inventory Management System

    MedicineBatch {
        int batchId;
        int medicineId;
        int stock;
        int quantity;
        LocalDate expiryDate;
        LocalDate stockedDate;
    }

    Medicine {
        int id;
        String name;
        String manufacturer
    }

    MedicineDao{
        
        // Create
        void add(Medicine medicine);

        // Read
        ArrayList<Medicine> getAll();
        Medicine get(int id);

        // Update
        void update(Medicine medicine);

        // Delete
        void delete(int id);
    }

    MedicineBatch{
        
        // Create
        void add(Medicine medicine);

        // Read
        ArrayList<Medicine> getAll();
        Medicine get(int id);

        // Update
        void update(Medicine medicine);

        // Delete
        void delete(int id);
    }

    MedicineService{

        void add(Medicine medicine);
        ArrayList<Medicine> getMedicines();
        ArrayList<MedicineBatch> getExpiredMedicineBatches();
        Medicine getMedicine(int id);
        void update(Medicine medicine);
        void getTotalStock(int medicineId); // not expired
        void decreaseStock(int batchId, int amount);
        void deleteMedicine(int id);

    }

    InventoryManagementSystem{
        // Display ang inventory (by batch)
        Choose action:
        [1] Add Batch
        [2] View Expired Batches
        [3] Filter Expired Batches // hawaon ang expired medicines sa pag display ani
        [4] Decrease Stock 
    }

// [===================================================]

// Logbook System
    Log {
        
        int logId;
        int patientId;
        LocalDate date;
        String purpose;
        Patient patient;

    }

    LogDao{

        // Create
        void add(Log log);

        // Read
        ArrayList<Log> getAll();
        Log get(int id);

        // Delete
        void delete(int id);

    }

    LogService {

        void add(Log log);
        Log getLog(int id);
        ArrayList<Log> getLogs();
        ArrayList<Log> getLogsByName(String name); 
        ArrayList<Log> getLogs(DateRange dateRange); // Get logs within a date range
        ArrayList<Log> getLogs(LocalDate date);
        ArrayList<Log> getLogsThisWeek();
        void delete(int id);

    }

// [===================================================]

// Util
    Sorter {
        
        ArrayList<Patient> sortByName(ArrayList<Patient> patients);
        ArrayList<Patient> sortByDate(ArrayList<PatientRecord> records);
        ArrayList<Patient> sortByDate(ArrayList<Log> logs);
        ArrayList<Patient> sortByExpiryDate(ArrayList<Medicine> medicines);

    }