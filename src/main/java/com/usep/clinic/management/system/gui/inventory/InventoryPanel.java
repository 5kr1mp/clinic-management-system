/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.usep.clinic.management.system.gui.inventory;

import com.usep.clinic.management.system.gui.NavigationManager;
import com.usep.clinic.management.system.gui.model.MedicineBatchTableModel;
import com.usep.clinic.management.system.model.Medicine;
import com.usep.clinic.management.system.model.MedicineBatch;
import com.usep.clinic.management.system.service.MedicineService;
import com.usep.clinic.management.system.util.DateTimeFormat;
import java.awt.*;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.*;

/**
 *
 * @author my pc
 */
public class InventoryPanel extends javax.swing.JPanel {
    private MedicineBatchTableModel batchTable = new MedicineBatchTableModel();
    private Medicine medicine;
    NavigationManager navigation = NavigationManager.getInstance();
    MedicineService medicineService;

    /**
     * Creates new form InventoryPanel
     */
    
    public void setMedicine(Medicine medicine){
        this.medicine = medicine;
        setTexts();
        refreshBatchTable();
    }
    
    public Medicine getMedicine(){
        return medicine;
    }
    
    public InventoryPanel() {
        initComponents();
        medicineService = MedicineService.getInstance();
        confirmButton.setVisible(false);
        cancelButton.setVisible(false);
        setVisible(true);
    }
    
    public void setTexts(){
        medicineIdField.setText(String.valueOf(medicine.getId()));
        medicineNameField.setText(medicine.getName());
        manufacturerField.setText(medicine.getManufacturer());
    }
    
    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        medicineNameField.setEditable(false);
        manufacturerField.setEditable(false);
        confirmButton.setVisible(false);
        cancelButton.setVisible(false);
        editButton.setVisible(true);

        medicine.setName(medicineNameField.getText().trim());
        medicine.setManufacturer(manufacturerField.getText().trim());

        try {
            MedicineService.getInstance().updateMedicine(medicine);
            JOptionPane.showMessageDialog(this, "Changes saved successfully.");
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, "Failed to update","Failed to update",JOptionPane.ERROR_MESSAGE);
        }
        

    }                                             

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        medicineNameField.setEditable(true);
        manufacturerField.setEditable(true);
        confirmButton.setVisible(true);
        cancelButton.setVisible(true);
        editButton.setVisible(false);
    }                                          

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        medicineNameField.setEditable(false);
        manufacturerField.setEditable(false);
        confirmButton.setVisible(false);
        cancelButton.setVisible(false);
        editButton.setVisible(true);
    }
    
    public void medNameAndManufacturerFields(){
        String medicineName = medicineNameField.getText().trim();
        String manufacturer = manufacturerField.getText().trim();
        
        if (medicineName.isEmpty() || manufacturer.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in medicine name and manufacturer text fields.");
            clearTextFields();
            return;
        }
    }
    
    private void clearTextFields(){
        medicineNameField.setText("");
        manufacturerField.setText("");
    }
    
    private void refreshBatchTable() {
        if (medicine != null) {
            ArrayList<MedicineBatch> batches = medicineService.getMedicineBatchesByMedicineId(medicine.getId(), true);
            batchTable.replaceAll(batches);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        inventoryHeading = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        medicineIdLabel = new javax.swing.JLabel();
        medicineIdField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        medicineNameField = new javax.swing.JTextField();
        manufacturerLabel = new javax.swing.JLabel();
        manufacturerField = new javax.swing.JTextField();
        editButton = new javax.swing.JButton();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineBatchTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        addRecordButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        inventoryHeading.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        inventoryHeading.setText("Inventory");

        medicineIdLabel.setText("Medicine ID:");

        medicineIdField.setEditable(false);

        jLabel1.setText("Medicine Name:");

        manufacturerLabel.setText("Manufacturer:");

        editButton.setText("Edit");
        editButton.addActionListener(e->{
            editButtonActionPerformed(e);
        });

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(e -> {
            confirmButtonActionPerformed(e);
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(e -> {
            cancelButtonActionPerformed(e);
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medicineIdLabel)
                    .addComponent(jLabel1)
                    .addComponent(manufacturerLabel))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(medicineIdField)
                    .addComponent(medicineNameField)
                    .addComponent(manufacturerField, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addComponent(editButton)
                .addGap(18, 18, 18)
                .addComponent(confirmButton)
                .addGap(18, 18, 18)
                .addComponent(cancelButton)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medicineIdLabel)
                    .addComponent(medicineIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(medicineNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton)
                    .addComponent(confirmButton)
                    .addComponent(cancelButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manufacturerLabel)
                    .addComponent(manufacturerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        medicineBatchTable.setModel(batchTable);
        jScrollPane1.setViewportView(medicineBatchTable);

        addRecordButton.setText("Add Record");
        addRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRecordButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addRecordButton)
                .addGap(18, 18, 18)
                .addComponent(backButton)
                .addGap(50, 50, 50))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRecordButton)
                    .addComponent(backButton))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(inventoryHeading)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(inventoryHeading)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void addRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRecordButtonActionPerformed
        if(medicineIdField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please select a medicine to add a record.");
        }
        
        JDialog dialog = new JDialog((Frame)SwingUtilities.getWindowAncestor(this), "Add New Batch", true);
        dialog.setLayout(new BorderLayout());
        dialog.setSize(400, 300);
        dialog.setLocationRelativeTo(this);

        JPanel formPanel = new JPanel(new GridLayout(4, 2, 5, 5));

        JTextField medicineNameField = new JTextField();
        JTextField quantityField = new JTextField();
        JTextField stockField = new JTextField();
        JTextField expiryDateField = new JTextField();
        
        formPanel.add(new JPanel());
        formPanel.add(medicineNameField);
        medicineNameField.setVisible(false);
        formPanel.add(new JLabel("Quantity:"));
        formPanel.add(quantityField);
        formPanel.add(new JLabel("Expiry Date (MM-dd-yyyy):"));
        formPanel.add(expiryDateField);
        formPanel.add(new JPanel());
        formPanel.add(stockField);
        stockField.setVisible(false);
       

        JPanel buttonPanel = new JPanel();
        JButton saveButton = new JButton("Save");
        JButton cancelButton = new JButton("Cancel");

        saveButton.addActionListener(e -> {
            try {
                int medId;
                int stock;
                int quantity;
                double price;
                LocalDate expiryDate;

                try {
                    medId = medicine.getId();
                    
                    quantity = Integer.parseInt(quantityField.getText().trim());
                    if (quantity <= 0) {
                        JOptionPane.showMessageDialog(dialog, "Quantity must be greater than 0.");
                        quantityField.setText("");
                        return;
                    }
                    
                    stock = quantity;
                    
                    expiryDate = DateTimeFormat.parseDate(expiryDateField.getText().trim());
                    
                    if (expiryDate.isBefore(LocalDate.now())) {
                        JOptionPane.showMessageDialog(dialog, "Date should not be earlier than today's date");
                        return;
                    }
                    
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(dialog, "Quantity and price must be valid numbers");
                        return;
                }
                    medId = medicine.getId();
                    String quantityStr = quantityField.getText().trim();
                    quantity = Integer.parseInt(quantityStr);
                    stock = quantity;
                    LocalDate parsedExpiryDate = DateTimeFormat.parseDate(expiryDateField.getText().trim());
                    // upat ka int, need med id
                    MedicineBatch newBatch = new MedicineBatch(medicineService.generateBatchId(), medId, quantity, stock, parsedExpiryDate, LocalDate.now());
                    ArrayList<MedicineBatch> allBatch = MedicineService.getInstance().getMedicineBatches();
                    batchTable.replaceAll(allBatch);
                    MedicineService.getInstance().addBatch(newBatch);

                refreshBatchTable();

                JOptionPane.showMessageDialog(dialog, "Batch added successfully");
                dialog.dispose();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(dialog, "Error saving batch: " + ex.getMessage());
            }
        });

        cancelButton.addActionListener(e -> dialog.dispose());

        buttonPanel.add(saveButton);
        buttonPanel.add(cancelButton);

        dialog.add(formPanel, BorderLayout.CENTER);
        dialog.add(buttonPanel, BorderLayout.SOUTH);

        dialog.setVisible(true);
    }//GEN-LAST:event_addRecordButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        NavigationManager.getInstance().show("Medicines");
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRecordButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel inventoryHeading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField manufacturerField;
    private javax.swing.JLabel manufacturerLabel;
    private javax.swing.JTable medicineBatchTable;
    private javax.swing.JTextField medicineIdField;
    private javax.swing.JLabel medicineIdLabel;
    private javax.swing.JTextField medicineNameField;
    // End of variables declaration//GEN-END:variables

}
